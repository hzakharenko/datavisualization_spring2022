rename(bartenders_median = h_median) %>%
rename(bartenders_emp = tot_emp)
sea_FOH <- sea_servers_to_cobine %>%
left_join(sea_bartenders_to_combine)
sea_FOH <- sea_servers_to_combine %>%
left_join(sea_bartenders_to_combine)
View(sea_FOH)
sea_FOH <- sea_servers_to_combine %>%
left_join(sea_bartenders_to_combine)
sea_FOH %>%
mutate(average = (server_median + bartenders_median)/2)
sea_FOH <- sea_servers_to_combine %>%
left_join(sea_bartenders_to_combine)
sea_FOH %>%
mutate(average_FOH_wage = (server_median + bartenders_median)/2)
sea_cooks_to_combine <- sea_servers %>%
select(year, h_median, tot_emp) %>%
rename(cooks_median = h_median) %>%
rename(cooks_emp = tot_emp)
sea_dishwashers_to_combine <- sea_bartenders %>%
select(year, h_median, tot_emp) %>%
rename(dishwashers_median = h_median) %>%
rename(dishwashers_emp = tot_emp)
sea_BOH <- sea_cooks_to_combine %>%
left_join(sea_dishwashers_to_combine)
sea_FOH %>%
mutate(average_FOH_wage = (cooks_median + dishwashers_median)/2)
sea_BOH <- sea_cooks_to_combine %>%
left_join(sea_dishwashers_to_combine)
sea_FOH %>%
mutate(average_BOH_wage = (cooks_median + dishwashers_median)/2)
sea_BOH <- sea_cooks_to_combine %>%
left_join(sea_dishwashers_to_combine)
sea_BOH %>%
mutate(average_BOH_wage = (cooks_median + dishwashers_median)/2)
sea_cooks_to_combine <- sea_cooks %>%
select(year, h_median, tot_emp) %>%
rename(cooks_median = h_median) %>%
rename(cooks_emp = tot_emp)
sea_dishwashers_to_combine <- sea_dishwashers %>%
select(year, h_median, tot_emp) %>%
rename(dishwashers_median = h_median) %>%
rename(dishwashers_emp = tot_emp)
sea_BOH <- sea_cooks_to_combine %>%
left_join(sea_dishwashers_to_combine)
sea_BOH %>%
mutate(average_BOH_wage = (cooks_median + dishwashers_median)/2)
sf_servers_to_combine <- sf_servers %>%
select(year, h_median, tot_emp) %>%
rename(server_median = h_median) %>%
rename(server_emp = tot_emp)
sf_bartenders_to_combine <- sf_bartenders %>%
select(year, h_median, tot_emp) %>%
rename(bartenders_median = h_median) %>%
rename(bartenders_emp = tot_emp)
sf_FOH <- sf_servers_to_combine %>%
left_join(sf_bartenders_to_combine)
sf_FOH %>%
mutate(average_FOH_wage = (server_median + bartenders_median)/2)
View(sf_servers)
View(dc_servers)
dc_servers_to_combine <-dc_servers %>%
select(year, h_median, tot_emp) %>%
rename(server_median = h_median) %>%
rename(server_emp = tot_emp)
dc_bartenders_to_combine <- dc_bartenders %>%
select(year, h_median, tot_emp) %>%
rename(bartenders_median = h_median) %>%
rename(bartenders_emp = tot_emp)
dc_FOH <- dc_servers_to_combine %>%
left_join(dc_bartenders_to_combine)
dc_FOH %>%
mutate(average_FOH_wage = (server_median + bartenders_median)/2)
dc_cooks_to_combine <- dc_cooks %>%
select(year, h_median, tot_emp) %>%
rename(cooks_median = h_median) %>%
rename(cooks_emp = tot_emp)
dc_dishwashers_to_combine <- dc_dishwashers %>%
select(year, h_median, tot_emp) %>%
rename(dishwashers_median = h_median) %>%
rename(dishwashers_emp = tot_emp)
dc_BOH <- dc_cooks_to_combine %>%
left_join(dc_dishwashers_to_combine)
dc_BOH %>%
mutate(average_BOH_wage = (cooks_median + dishwashers_median)/2)
bartenders <- dc_all_years %>%
filter(occ_title== "Bartenders") %>%
group_by(year) %>%
summarise(
h_pct10,
h_pct25,
h_median,
h_pct75,
h_pct90,
h_mean,
tot_emp
)
servers <- dc_all_years %>%
filter(occ_title== "Waiters and Waitresses") %>%
group_by(year) %>%
summarise(
h_pct10,
h_pct25,
h_median,
h_pct75,
h_pct90,
h_mean,
tot_emp
)
counter_service <- dc_all_years %>%
filter(occ_title== "Counter Attendants, Cafeteria, Food Concession, and Coffee Shop") %>%
group_by(year) %>%
summarise(
h_pct10,
h_pct25,
h_median,
h_pct75,
h_pct90,
h_mean,
tot_emp
)
dishwashers <- dc_all_years %>%
filter(occ_title== "Dishwashers") %>%
group_by(year) %>%
summarise(
h_pct10,
h_pct25,
h_median,
h_pct75,
h_pct90,
h_mean,
tot_emp
)
cooks <- dc_all_years %>%
filter(occ_title== "Cooks, Restaurant") %>%
group_by(year) %>%
summarise(
h_pct10,
h_pct25,
h_median,
h_pct75,
h_pct90,
h_mean,
tot_emp
)
head_chefs <- dc_all_years %>%
filter(occ_title== "Chefs and Head Cooks") %>%
group_by(year) %>%
summarise(
h_pct10,
h_pct25,
h_median,
h_pct75,
h_pct90,
h_mean,
tot_emp
)
View(head_chefs)
View(dishwashers)
View(head_chefs)
knitr::opts_chunk$set(echo = TRUE)
md_vax <- read_csv("https://raw.githubusercontent.com/state-of-maryland/VaccineCSVs/master/Vax_ZIP_CODE_FirstSecondSingle_Totals_Raw.csv")
library(tidyverse)
library(janitor)
library(lubridate)
library(ggrepel)
library(sf)
library(tidycensus)
# Turn off scientific notation
options(scipen=999)
md_vax <- read_csv("https://raw.githubusercontent.com/state-of-maryland/VaccineCSVs/master/Vax_ZIP_CODE_FirstSecondSingle_Totals_Raw.csv")
View(md_vax)
md_vax %>%
mutate(date = today())
md_vax <- md_vax %>%
mutate(date = today())
View(md_vax)
md_vax <- md_vax %>%
mutate(date = today()) %>%
rename(zip_code = ZIP_CODE) %>%
rename(first_dose = FirstDose) %>%
rename(second_dose = SecondDose) %>%
rename(at_least_one_dose = AtleastOneDose) %>%
rename(fully_vaccinated = FullyVaccinated)
View(md_vax)
md_vax <- md_vax %>%
mutate(date = today()) %>%
rename(zip_code = ZIP_CODE) %>%
rename(first_dose = FirstDose) %>%
rename(second_dose = SecondDose) %>%
rename(single_dose = SingleDose) %>%
rename(at_least_one_dose = AtleastOneDose) %>%
rename(fully_vaccinated = FullyVaccinated)
md_vax <- read_csv("https://raw.githubusercontent.com/state-of-maryland/VaccineCSVs/master/Vax_ZIP_CODE_FirstSecondSingle_Totals_Raw.csv")
md_vax <- md_vax %>%
mutate(date = today()) %>%
rename(zip_code = ZIP_CODE) %>%
rename(first_dose = FirstDose) %>%
rename(second_dose = SecondDose) %>%
rename(single_dose = SingleDose) %>%
rename(at_least_one_dose = AtleastOneDose) %>%
rename(fully_vaccinated = FullyVaccinated)
View(md_vax)
md_vax %>%
remove(is.na(fully_vaccinated)
md_vax %>%
remove(is.na(fully_vaccinated))
md_vax %>%
drop_na(fully_vaccinated)
md_vax <- md_vax %>%
drop_na(fully_vaccinated)
md_vax %>%
filter(md_vax[nchar(md_vax$zip_code) ==5 , ])
md_vax[nchar(md_vax$zip_code) ==5 , ])
md_vax[nchar(md_vax$zip_code) ==5 , ]
md_vax <- md_vax[nchar(md_vax$zip_code) ==5 , ]
View(md_vax)
md_zip <- get_acs(geography = "zcta",
state = "MD",
year = 2019)
zip <- get_acs(geography = "zcta",
variables = c(black_pop_zip = "B01001_001"),
state = "MD",
year = 2019)
View(zip)
md_vax %>%
filter(zip_code %in% zip$GEOID)
md_vax_zips <- md_vax %>%
filter(zip_code %in% zip$GEOID)
not_md_vax_zips <- md_vax %>%
filter(!(zip_code %in% zip$GEOID))
View(not_md_vax_zips)
md_vax_zips %>%
arrange(desc(fully_vaccinated))
md_vax_zips %>%
arrange(desc(fully_vaccinated)) %>%
slice(25)
md_vax_zips %>%
arrange(desc(fully_vaccinated)) %>%
head(25)
md_vax_zips <- md_vax_zips %>%
arrange(desc(fully_vaccinated)) %>%
head(25)
not_md_vax_zips <- not_md_vax_zips %>%
arrange(desc(fully_vaccinated)) %>%
head(25)
View(not_md_vax_zips)
class(md_vax$date)
setwd("~/Documents/GitHub/data_journalism_2022_spring/labs/lab_12")
write.csv(md_vax_zips, paste("maryland_zips_",as.Date(date, format('%Y%m%d')),".csv"))
write.csv(md_vax_zips, paste("maryland_zips_",format(date, '%Y%m%d'),".csv"))
write.csv(md_vax_zips, paste("maryland_zips_", md_vax_zips$date,".csv"))
write.csv(md_vax_zips, file = paste("maryland_zips_", md_vax_zips$date,".csv"))
write.csv(md_vax_zips, file = paste("maryland_zips_", md_vax_zips$date,".csv"))
write.csv(not_md_vax_zips, "non_maryland_zips_yyyymmdd.csv")
write.csv(md_vax_zips, paste0("maryland_zips_", format(md_vax_zips$date, "%Y%m%d"), ".csv"))
date <- paste0("maryland_zips_", format(md_vax_zips$date, "%Y%m%d"), ".csv")
date <- paste0("maryland_zips_", format(md_vax_zips$date, "%Y%m%d"), ".csv")
date
date <- paste0("maryland_zips_", format(md_vax_zips$date[1], "%Y%m%d"), ".csv")
date
write.csv(md_vax_zips, paste0paste0("maryland_zips_", format(md_vax_zips$date[1], "%Y%m%d"), ".csv"))
write.csv(md_vax_zips, paste0("maryland_zips_", format(md_vax_zips$date[1], "%Y%m%d"), ".csv"))
write.csv(md_vax_zips, paste0("maryland_zips_", format(md_vax_zips$date[1], "%Y%m%d"), ".csv"))
write.csv(not_md_vax_zips, paste0("non_maryland_zips_", format(md_vax_zips$date[1], "%Y%m%d"), ".csv"))
View(md_vax_zips)
md_vax_zips %>%
select(zip_code, fully_vaccinated)
View(zip)
zip <- get_acs(geography = "zcta",
variables = c(population = "B01001_001"),
state = "MD",
year = 2019)
View(not_md_vax_zips)
md_vax_zips_only <- md_vax_zips %>%
select(zip_code, fully_vaccinated)
zip_pop <- zip %>%
select(GEOID, estimate) %>%
rename(zip_code = GEOID) %>%
rename(population = estimate)
View(zip)
View(zip_pop)
md_vax_zips_only <- md_vax %>%
filter(zip_code %in% zip$GEOID) %>%
select(zip_code, fully_vaccinated)
zip_pop <- zip %>%
select(GEOID, estimate) %>%
rename(zip_code = GEOID) %>%
rename(population = estimate)
View(md_vax_zips_only)
View(zip_pop)
glimpse(zip_pop)
glimpose(md_vax_zips_only)
glimpse(md_vax_zips_only)
md_vax_zips_only <- md_vax %>%
filter(zip_code %in% zip$GEOID) %>%
select(zip_code, fully_vaccinated) %>%
as.character(zip_code)
md_vax_zips_only <- md_vax %>%
filter(zip_code %in% zip$GEOID) %>%
select(zip_code, fully_vaccinated) %>%
as.character(md_vax$zip_code)
zip_pop <- zip %>%
select(GEOID, estimate) %>%
rename(zip_code = GEOID) %>%
rename(population = estimate)
md_vax_zips_only <- md_vax %>%
filter(zip_code %in% zip$GEOID) %>%
select(zip_code, fully_vaccinated) %>%
as.character(md_vax$zip_code)
zip_pop <- zip %>%
select(GEOID, estimate) %>%
rename(zip_code = GEOID) %>%
rename(population = estimate)
md_vax_zips_only <- md_vax %>%
filter(zip_code %in% zip$GEOID) %>%
select(zip_code, fully_vaccinated) %>%
transform(zip_code = as.character(zip_code))
zip_pop <- zip %>%
select(GEOID, estimate) %>%
rename(zip_code = GEOID) %>%
rename(population = estimate)
glimpse(md_vax_zips_only)
md_pop_vax <- md_vax_zips_only %>%
left_join(zip_pop)
View(md_pop_vax)
md_pop_vax <- zip_pop %>%
left_join(md_vax_zips_only)
View(md_pop_vax)
md_pop_vax %>%
mutate(percentage_vax = (fully_vaccinated/population)*100)
md_pop_vax <- md_pop_vax %>%
mutate(percentage_vax = (fully_vaccinated/population)*100)
md_pop_vax <- md_pop_vax %>%
mutate(percentage_vax = (fully_vaccinated/population)*100) %>%
filter(percentage_vax < 50)
View(md_vax)
View(md_pop_vax)
md_pop_vax <- md_pop_vax %>%
mutate(percentage_vax = (fully_vaccinated/population)*100)
md_pop_vax <- md_pop_vax %>%
mutate(percentage_vax = (fully_vaccinated/population)*100)
md_pop_vax <- zip_pop %>%
left_join(md_vax_zips_only)
md_pop_vax <- md_pop_vax %>%
mutate(percentage_vax = (fully_vaccinated/population)*100)
View(md_pop_vax)
md_pop_vax <- md_pop_vax %>%
mutate(percentage_vax = (fully_vaccinated/population)*100) %>%
filter(percentage_vax < 50)
counties <- counties()
library(tigris)
counties <- counties()
md_counties <- counties %>%
filter(STATEFP == "24")
View(md_counties)
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax) +
theme_minimal()
ggplot() +
geom_sf(data=md_counties, aes(fill=md_pop_vax)) +
theme_minimal()
md_counties %>%
ggplot() +
geom_sf() +
theme_minimal()
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax, aes(color=percentage_vax), size=2) +
scale_colour_viridis_b(option="magma") +
theme_minimal()
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax) +
theme_minimal()
zip <- get_acs(geography = "zcta",
variables = c(population = "B01001_001"),
state = "MD",
year = 2019,
geometry=TRUE)
md_vax_zips_only <- md_vax %>%
filter(zip_code %in% zip$GEOID) %>%
select(zip_code, fully_vaccinated) %>%
transform(zip_code = as.character(zip_code))
zip_pop <- zip %>%
select(GEOID, estimate) %>%
rename(zip_code = GEOID) %>%
rename(population = estimate)
md_pop_vax <- zip_pop %>%
left_join(md_vax_zips_only)
md_pop_vax <- md_pop_vax %>%
mutate(percentage_vax = (fully_vaccinated/population)*100) %>%
filter(percentage_vax < 50)
ggplot() +
geom_sf(data=md_pop_vax) +
theme_minimal()
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax) +
theme_minimal()
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax,aes(color=percentage_vax)) +
theme_minimal()
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax,aes(fill=percentage_vax)) +
theme_minimal()
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax,aes(fill=percentage_vax)) +
scale_colour_viridis_b(option="magma") +
theme_minimal()
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax,aes(fill=percentage_vax)) +
theme_minimal()
View(zip_pop)
md_vax_zips_only <- md_vax %>%
filter(zip_code %in% zip$GEOID) %>%
select(zip_code, fully_vaccinated) %>%
transform(zip_code = as.character(zip_code))
zip_pop <- zip %>%
select(GEOID, estimate, geometry) %>%
rename(zip_code = GEOID) %>%
rename(population = estimate)
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax,aes(fill=percentage_vax)) +
theme_minimal()
md_vax_zips_only <- md_vax %>%
filter(zip_code %in% zip$GEOID) %>%
select(zip_code, fully_vaccinated, date) %>%
transform(zip_code = as.character(zip_code))
zip_pop <- zip %>%
select(GEOID, estimate, geometry) %>%
rename(zip_code = GEOID) %>%
rename(population = estimate)
md_pop_vax <- zip_pop %>%
left_join(md_vax_zips_only)
View(md_vax)
View(md_pop_vax)
sub <- paste("The vaccination data for this map was taken from ", format(md_pop_vax$date, format="%B %d"), " ", sep="")
sub
sub <- paste("The vaccination data for this map was taken from ", format(md_pop_vax$date[1], format="%B %d"), " ", sep="")
sub
sub <- paste("The vaccination data for this map was taken from ", format(md_pop_vax$date[1], format="%B %d"), ".", sep="")
sub
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax,aes(fill=percentage_vax)) +
labs(title="Maryland counties with a vaccinated population under %50", subtitle=sub) +
theme_minimal()
View(md_pop_vax)
md_pop_vax <- md_pop_vax %>%
mutate(percentage_vax = (fully_vaccinated/population)*100) %>%
filter(percentage_vax < 50)
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax,aes(fill=percentage_vax)) +
labs(title="Maryland counties with a vaccinated population under %50", subtitle=sub) +
theme_minimal()
ggplot() +
geom_sf(data=md_counties, fill="white") +
geom_sf(data=md_pop_vax,aes(fill=percentage_vax)) +
labs(title="Maryland counties with a vaccinated population under 50%", subtitle=sub) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library (readr)
#US county data for 2020
urlfile="https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-2020.csv"
covid_2020<-read_csv(url(urlfile))
write.csv(covid_2020, file = 'covid_counties_2020.csv')
#US state data up to 4/19
urlfile="https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv"
covid_us_states<-read_csv(url(urlfile))
write.csv(covid_us_states, file = 'covid_states.csv')
covid_us_states %>%
group_by(date) %>%
summarise(total_cases = sum(cases))
#case_totals_by_date <-
View(covid_us_states)
covid_us_states %>%
group_by(date)
#case_totals_by_date <-
covid_us_states %>%
group_by(date) %>%
summarise(cases = sum(cases))
#case_totals_by_date <-
covid_us_states %>%
filter(state = "Maryland")
covid_us_states %>%
filter(state == "Maryland")
covid_us_states %>%
mutate(new_cases = cases - lag(cases, default = first(cases)))
covid_us_states %>%
group_by(state)
mutate(new_cases = cases - lag(cases, default = first(cases)))
covid_us_states %>%
group_by(state) %>%
mutate(new_cases = cases - lag(cases, default = first(cases)))
covid_us_states %>%
group_by(state) %>%
arrange(date) %>%
mutate(new_cases = cases - lag(cases, default = first(cases)))
setwd("~/Documents/GitHub/datavisualization_spring2022/final-project")
#US national data updated every day
urlfile="https://raw.githubusercontent.com/nytimes/covid-19-data/master/rolling-averages/us.csv"
covid_us<-read_csv(url(urlfile))
write.csv(covid_us, file = 'covid_us.csv')
View(covid_us)
